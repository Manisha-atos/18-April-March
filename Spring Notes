Java SE  ->Core Java -> Stand alone applications  
Java EE  ->Advance Java-> Enterprise/Business application
Java ME  -> Mobile Applications



Q.What is enterprise ? 
     Any business orginization is known as enterprise.

    Enterprises do the business by providing services
  

Ex.    Colleges   ->Online Admission Form,
       Hotels     ->Online Order,Online Room booking
       Banks      ->Witdraw,Deposit,Transfer Fund
       LICs       ->Online Premium pay /
       Hospital   ->Online Appointement
       Transoprt Companies ->booking ticket,cancelling tickets


	   
	   1.Money
	   2.Man Power(Data...)
	   
	   
	   1.Business to Customer application (ATM)
	   2.Business to Business  application
	   
	   
	   
Enteprise applications comprises of Four Layers
=========================================
===============================================================================================================
Presentation Layer                 Service Layer               Data Access Layer                   Data Layer
===============================================================================================================

Data Layer
==========
    RDBMS -MySQL,Oracle
    NOSQL-Mongo DB,DynomoDB
    Text File
    Excel File
    XML File
    Collections
    Another Business application
	
	
    
Data Access Layer ( spring )--CRUD with data 
===============
jdbc/hibernate/jpa/ jdbcTemplate,hibernateTemplate,JpaTemplate,JPARepository
third party Jar Files
java.io
jdbc
jaxp
java.util
servlet api(response.sendRedirect())  (RestTmeplate)


Service Layer :Programatical implementation of business rules
=============
Java Bean
Enterprise Java Bean
Spring Bean

Presentation Layer
================
(Static+Dynamic)

Client Side
=========
HTML,
JS
CSS
jQuery
Angular JS
Angular
Boot strap
React

Server Side
==========
Servlet
JSP

Sprinng MVC Exam[le
1. create a dynamic web project.
2.Add tomcat in workspace
3.Add all jars in lib folder
4. configure dispatcher servlet in web.xml file
<servlet>
  <servlet-name>spring</servlet-name>
  <servlet-class></servlet-class>
  </servlet>
  
  <servlet-mapping>
  <servlet-name>spring</servlet-name>
  <url-pattern>/spring/*</url-pattern>
  
  </servlet-mapping>
  5. added a controller with request mapping 
  6. add servlet xml  spring-servlet.xml
  view resolver code
  
  <?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
<context:component-scan base-package="com"/>
<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<property name="prefix" value="/WEB-INF/views/"></property>
<property name="suffix" value=".jsp"></property></bean>
</beans>
7. create a new folder with name views
add the jsp pages


  
  

